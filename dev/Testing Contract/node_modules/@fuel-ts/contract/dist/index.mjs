var x=Object.defineProperty;var L=(s,t)=>{for(var o in t)x(s,o,{get:t[o],enumerable:!0})};import{arrayify as A}from"@ethersproject/bytes";import{Logger as I}from"@ethersproject/logger";import{Interface as w}from"@fuel-ts/abi-coder";import{randomBytes as v}from"@fuel-ts/keystore";import{Contract as T}from"@fuel-ts/program";import{CreateTransactionRequest as q}from"@fuel-ts/providers";import{MAX_GAS_PER_TX as D}from"@fuel-ts/transactions";import{versions as P}from"@fuel-ts/versions";var S={};L(S,{getContractId:()=>f,getContractRoot:()=>k,getContractStorageRoot:()=>p,includeHexPrefix:()=>a});import{hexlify as g,arrayify as d,concat as R}from"@ethersproject/bytes";import{sha256 as C}from"@ethersproject/sha2";import{calcRoot as B}from"@fuel-ts/merkle";import b from"@fuel-ts/sparsemerkle";var k=s=>{let o=[],e=d(s);for(let r=0;r<e.length;r+=8){let i=new Uint8Array(8);i.set(e.slice(r,r+8)),o.push(i)}return B(o.map(r=>g(r)))},p=s=>{let t=new b;return s.forEach(({key:o,value:e})=>t.update(o,e)),t.root},f=(s,t,o)=>{let e=k(d(s));return C(R(["0x4655454C",t,e,o]))},a=(s,t)=>g(s,{...t,allowMissingPrefix:!0});var z=new I(P.FUELS),n=class{constructor(t,o,e=null){this.bytecode=A(t),o instanceof w?this.interface=o:this.interface=new w(o),e&&"provider"in e?(this.provider=e.provider,this.account=e):(this.provider=e,this.account=null)}connect(t){return new n(this.bytecode,this.interface,t)}createTransactionRequest(t){var m;let o=(m=t==null?void 0:t.storageSlots)==null?void 0:m.map(({key:c,value:u})=>({key:a(c),value:a(u)})).sort(({key:c},{key:u})=>c.localeCompare(u)),e={salt:v(32),...t,storageSlots:o||[]},r=e.stateRoot||p(e.storageSlots),i=f(this.bytecode,e.salt,r),l=new q({gasPrice:0,gasLimit:D,bytecodeWitnessIndex:0,witnesses:[this.bytecode],...e});return l.addContractCreatedOutput(i,r),{contractId:i,transactionRequest:l}}async deployContract(t){if(!this.account)return z.throwArgumentError("Cannot deploy Contract without account","account",this.account);let{contractId:o,transactionRequest:e}=this.createTransactionRequest(t);return await this.account.fund(e),await(await this.account.sendTransaction(e)).wait(),new T(o,this.interface,this.account)}};export{n as ContractFactory,S as ContractUtils};
//# sourceMappingURL=index.mjs.map
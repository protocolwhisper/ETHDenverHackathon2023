"use strict";var A=Object.defineProperty;var G=Object.getOwnPropertyDescriptor;var V=Object.getOwnPropertyNames;var j=Object.prototype.hasOwnProperty;var H=(i,r)=>()=>(i&&(r=i(i=0)),r);var J=(i,r)=>{for(var e in r)A(i,e,{get:r[e],enumerable:!0})},$=(i,r,e,t)=>{if(r&&typeof r=="object"||typeof r=="function")for(let s of V(r))!j.call(i,s)&&s!==e&&A(i,s,{get:()=>r[s],enumerable:!(t=G(r,s))||t.enumerable});return i};var X=i=>$(A({},"__esModule",{value:!0}),i);var o=H(()=>{});var ee={};J(ee,{generateTestWallet:()=>Z,seedTestWallet:()=>E});module.exports=X(ee);o();o();o();o();var l="http://127.0.0.1:4000/graphql";o();var x=require("@fuel-ts/hdwallet"),D=require("@fuel-ts/mnemonic"),K=require("@fuel-ts/signer");o();var g=require("@ethersproject/bytes"),W=require("@fuel-ts/address"),C=require("@fuel-ts/constants"),M=require("@fuel-ts/interfaces"),F=require("@fuel-ts/math"),m=require("@fuel-ts/providers"),N=require("@fuel-ts/transactions");var h=class extends M.AbstractAccount{constructor(e,t=l){super();this.provider=this.connect(t),this.address=W.Address.fromDynamicInput(e)}connect(e){return typeof e=="string"?this.provider?this.provider.connect(e):this.provider=new m.Provider(e):this.provider=e,this.provider}async getResourcesToSpend(e,t){return this.provider.getResourcesToSpend(this.address,e,t)}async getCoins(e){let t=[],a;for(;;){let p=await this.provider.getCoins(this.address,e,{first:9999,after:a});if(t.push(...p),!(p.length>=9999))break;throw new Error(`Wallets with more than ${9999} coins are not yet supported`)}return t}async getMessages(){let e=[],s;for(;;){let a=await this.provider.getMessages(this.address,{first:9999,after:s});if(e.push(...a),!(a.length>=9999))break;throw new Error(`Wallets with more than ${9999} messages are not yet supported`)}return e}async getBalance(e=C.NativeAssetId){return await this.provider.getBalance(this.address,e)}async getBalances(){let e=[],s;for(;;){let a=await this.provider.getBalances(this.address,{first:9999,after:s});if(e.push(...a),!(a.length>=9999))break;throw new Error(`Wallets with more than ${9999} balances are not yet supported`)}return e}async fund(e){let t=e.calculateFee(),s=await this.getResourcesToSpend([t]);e.addResources(s)}async transfer(e,t,s=C.NativeAssetId,a={}){let p={gasLimit:N.MAX_GAS_PER_TX,...a},d=new m.ScriptTransactionRequest(p);d.addCoinOutput(e,t,s);let y=d.calculateFee(),u=[];y.assetId===(0,g.hexlify)(s)?(y.amount=y.amount.add(t),u=[y]):u=[[t,s],y];let T=await this.getResourcesToSpend(u);return d.addResources(T),this.sendTransaction(d)}async withdrawToBaseLayer(e,t,s={}){let a=(0,g.arrayify)("0x".concat(e.toHexString().substring(2).padStart(64,"0"))),p=(0,g.arrayify)("0x".concat((0,F.bn)(t).toHex().substring(2).padStart(16,"0"))),y={script:new Uint8Array([...(0,g.arrayify)(m.withdrawScript.bytes),...a,...p]),gasLimit:N.MAX_GAS_PER_TX,...s},u=new m.ScriptTransactionRequest(y);u.addMessageOutputs();let T=u.calculateFee(),U=[];T.amount=T.amount.add(t),U=[T];let _=await this.getResourcesToSpend(U);return u.addResources(_),this.sendTransaction(u)}async sendTransaction(e){let t=(0,m.transactionRequestify)(e);return await this.provider.addMissingVariables(t),this.provider.sendTransaction(t)}async simulateTransaction(e){let t=(0,m.transactionRequestify)(e);return await this.provider.addMissingVariables(t),this.provider.simulate(t)}};o();var S=require("@fuel-ts/hasher"),v=require("@fuel-ts/providers"),z=require("@fuel-ts/signer");var w=class extends h{constructor(e,t=l){let s=new z.Signer(e);super(s.address,t);this.signer=()=>s,this.provider=this.connect(t)}get privateKey(){return this.signer().privateKey}get publicKey(){return this.signer().publicKey}async signMessage(e){return this.signer().sign((0,S.hashMessage)(e))}async signTransaction(e){let t=(0,v.transactionRequestify)(e),s=(0,S.hashTransaction)(t);return this.signer().sign(s)}async populateTransactionWitnessesSignature(e){let t=(0,v.transactionRequestify)(e),s=await this.signTransaction(t);return t.updateWitnessByOwner(this.address,s),t}async sendTransaction(e){let t=(0,v.transactionRequestify)(e);return await this.provider.addMissingVariables(t),this.provider.sendTransaction(await this.populateTransactionWitnessesSignature(t))}async simulateTransaction(e){let t=(0,v.transactionRequestify)(e);return await this.provider.addMissingVariables(t),this.provider.call(await this.populateTransactionWitnessesSignature(t),{utxoValidation:!0})}};w.defaultPath="m/44'/1179993420'/0'/0/0";var R=class extends h{unlock(r){return new n(r,this.provider)}},n=class extends w{lock(){return this.signer=()=>new K.Signer("0x00"),new R(this.address,this.provider)}static generate(r){let e=K.Signer.generatePrivateKey(r==null?void 0:r.entropy);return new n(e,r==null?void 0:r.provider)}static fromSeed(r,e,t){let a=x.HDWallet.fromSeed(r).derivePath(e||n.defaultPath);return new n(a.privateKey,t)}static fromMnemonic(r,e,t,s){let a=D.Mnemonic.mnemonicToSeed(r,t),d=x.HDWallet.fromSeed(a).derivePath(e||n.defaultPath);return new n(d.privateKey,s)}static fromExtendedKey(r,e){let t=x.HDWallet.fromExtendedKey(r);return new n(t.privateKey,e)}};var f=class{static fromAddress(r,e=l){return new R(r,e)}static fromPrivateKey(r,e=l){return new n(r,e)}};f.generate=n.generate,f.fromSeed=n.fromSeed,f.fromMnemonic=n.fromMnemonic,f.fromExtendedKey=n.fromExtendedKey;o();o();o();o();o();var Y=require("@ethersproject/bytes");o();var L,q="Node";typeof globalThis<"u"&&globalThis.crypto&&(L=globalThis.crypto,q="Web");if(!L&&typeof require=="function")try{L=require("crypto"),q="Node"}catch(i){console.error("keystore expects a standard Web browser or Node environment.",i)}var b=L,k=q;o();var P=i=>k==="Node"?b.randomBytes(i):b.getRandomValues(new Uint8Array(i));o();var B=require("@fuel-ts/providers");var E=async(i,r)=>{let e=new n(process.env.GENESIS_SECRET||P(32),i.provider),t=await e.getResourcesToSpend(r),s=new B.ScriptTransactionRequest({gasLimit:1e4,gasPrice:1});s.addResources(t),r.map(B.coinQuantityfy).forEach(({amount:p,assetId:d})=>s.addCoinOutput(i.address,p,d)),await(await e.sendTransaction(s)).wait()};var Z=async(i,r)=>{let e=f.generate({provider:i});return r&&await E(e,r),e};0&&(module.exports={generateTestWallet,seedTestWallet});
//# sourceMappingURL=test-utils.js.map
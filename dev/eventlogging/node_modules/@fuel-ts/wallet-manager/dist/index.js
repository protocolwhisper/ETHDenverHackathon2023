"use strict";var k=Object.defineProperty;var U=Object.getOwnPropertyDescriptor;var C=Object.getOwnPropertyNames;var D=Object.prototype.hasOwnProperty;var q=(r,e)=>{for(var t in e)k(r,t,{get:e[t],enumerable:!0})},G=(r,e,t,s)=>{if(e&&typeof e=="object"||typeof e=="function")for(let n of C(e))!D.call(r,n)&&n!==t&&k(r,n,{get:()=>e[n],enumerable:!(s=U(e,n))||s.enumerable});return r};var L=r=>G(k({},"__esModule",{value:!0}),r);var O=(r,e,t)=>{if(!e.has(r))throw TypeError("Cannot "+t)};var a=(r,e,t)=>(O(r,e,"read from private field"),t?t.call(r):e.get(r)),c=(r,e,t)=>{if(e.has(r))throw TypeError("Cannot add the same private member more than once");e instanceof WeakSet?e.add(r):e.set(r,t)},i=(r,e,t,s)=>(O(r,e,"write to private field"),s?s.call(r,t):e.set(r,t),t);var P=(r,e,t)=>(O(r,e,"access private method"),t);var Y={};q(Y,{StorageAbstract:()=>E,Vault:()=>W,WalletManager:()=>b});module.exports=L(Y);var _=require("@fuel-ts/keystore"),T=require("events");var K=class{constructor(){this.storage=new Map}async getItem(e){return this.storage.get(e)}async setItem(e,t){this.storage.set(e,t)}async removeItem(e){this.storage.delete(e)}async clear(){return this.storage.clear()}},M=K;var I=require("@fuel-ts/mnemonic"),A=require("@fuel-ts/wallet");var h,v=class{constructor(e){c(this,h,void 0);this.pathKey="{}";this.rootPath=`m/44'/1179993420'/${this.pathKey}'/0/0`;this.numberOfAccounts=0;i(this,h,e.secret||I.Mnemonic.generate()),this.rootPath=e.rootPath||this.rootPath,this.numberOfAccounts=e.numberOfAccounts||1}getDerivePath(e){return this.rootPath.includes(this.pathKey)?this.rootPath.replace(this.pathKey,String(e)):`${this.rootPath}/${e}`}serialize(){return{secret:a(this,h),rootPath:this.rootPath,numberOfAccounts:this.numberOfAccounts}}getAccounts(){let e=[],t=0;do{let s=A.Wallet.fromMnemonic(a(this,h),this.getDerivePath(t));e.push({publicKey:s.publicKey,address:s.address}),t+=1}while(t<this.numberOfAccounts);return e}addAccount(){this.numberOfAccounts+=1;let e=A.Wallet.fromMnemonic(a(this,h),this.getDerivePath(this.numberOfAccounts-1));return{publicKey:e.publicKey,address:e.address}}exportAccount(e){let t=0;do{let s=A.Wallet.fromMnemonic(a(this,h),this.getDerivePath(t));if(s.address.equals(e))return s.privateKey;t+=1}while(t<this.numberOfAccounts);throw new Error("Account not found")}getWallet(e){let t=this.exportAccount(e);return A.Wallet.fromPrivateKey(t)}};h=new WeakMap,v.type="mnemonic";var g=require("@fuel-ts/wallet");var d,w=class{constructor(e){c(this,d,[]);e.secret?i(this,d,[e.secret]):i(this,d,e.accounts||[g.Wallet.generate().privateKey])}serialize(){return{accounts:a(this,d)}}getPublicAccount(e){let t=g.Wallet.fromPrivateKey(e);return{address:t.address,publicKey:t.publicKey}}getAccounts(){return a(this,d).map(this.getPublicAccount)}addAccount(){let e=g.Wallet.generate();return a(this,d).push(e.privateKey),this.getPublicAccount(e.privateKey)}exportAccount(e){let t=a(this,d).find(s=>g.Wallet.fromPrivateKey(s).address.equals(e));if(!t)throw new Error("Address not found");return t}getWallet(e){let t=this.exportAccount(e);return g.Wallet.fromPrivateKey(t)}};d=new WeakMap,w.type="privateKey";var p={invalid_vault_type:"Invalid VaultType",address_not_found:"Address not found",vault_not_found:"Vault not found",wallet_not_unlocked:"Wallet is locked",passphrase_not_match:"Passphrase didn't match"};function m(r,e){if(!r)throw new Error(e)}var o,y,l,V,z,S,N,x=class extends T.EventEmitter{constructor(t){super();c(this,V);c(this,S);this.storage=new M;this.STORAGE_KEY="WalletManager";c(this,o,[]);c(this,y,"");c(this,l,!0);this.storage=(t==null?void 0:t.storage)||this.storage}get isLocked(){return a(this,l)}exportVault(t){m(!a(this,l),p.wallet_not_unlocked);let s=a(this,o).find((n,u)=>u===t);return m(s,p.vault_not_found),s.vault.serialize()}getVaults(){return a(this,o).map((t,s)=>({title:t.title,type:t.type,vaultId:s}))}getAccounts(){return a(this,o).flatMap((t,s)=>t.vault.getAccounts().map(n=>({...n,vaultId:s})))}getWallet(t){let s=a(this,o).find(n=>n.vault.getAccounts().find(u=>u.address.equals(t)));return m(s,p.address_not_found),s.vault.getWallet(t)}exportPrivateKey(t){m(!a(this,l),p.wallet_not_unlocked);let s=a(this,o).find(n=>n.vault.getAccounts().find(u=>u.address.equals(t)));return m(s,p.address_not_found),s.vault.exportAccount(t)}async addAccount(t){await this.loadState();let s=a(this,o)[(t==null?void 0:t.vaultId)||0];await m(s,p.vault_not_found);let n=s.vault.addAccount();return await this.saveState(),n}async removeVault(t){a(this,o).splice(t,1),await this.saveState()}async addVault(t){await this.loadState();let s=this.getVaultClass(t.type),n=new s(t);i(this,o,a(this,o).concat({title:t.title,type:t.type,vault:n})),await this.saveState()}async lock(){i(this,l,!0),i(this,o,[]),i(this,y,""),this.emit("lock")}async unlock(t){i(this,y,t),i(this,l,!1);try{await this.loadState(),this.emit("unlock")}catch(s){throw await this.lock(),s}}async updatePassphrase(t,s){let n=a(this,l);await this.unlock(t),i(this,y,s),await this.saveState(),await this.loadState(),n&&await this.lock()}async loadState(){await m(!a(this,l),p.wallet_not_unlocked);let t=await this.storage.getItem(this.STORAGE_KEY);if(t){let s=await(0,_.decrypt)(a(this,y),JSON.parse(t));i(this,o,P(this,S,N).call(this,s.vaults))}}async saveState(){await m(!a(this,l),p.wallet_not_unlocked);let t=await(0,_.encrypt)(a(this,y),{vaults:P(this,V,z).call(this,a(this,o))});await this.storage.setItem(this.STORAGE_KEY,JSON.stringify(t)),this.emit("update")}getVaultClass(t){let s=x.Vaults.find(n=>n.type===t);return m(s,p.invalid_vault_type),s}},b=x;o=new WeakMap,y=new WeakMap,l=new WeakMap,V=new WeakSet,z=function(t){return t.map(({title:s,type:n,vault:u})=>({title:s,type:n,data:u.serialize()}))},S=new WeakSet,N=function(t){return t.map(({title:s,type:n,data:u})=>{let R=this.getVaultClass(n);return{title:s,type:n,vault:new R(u)}})},b.Vaults=[v,w];var W=class{constructor(e){throw new Error("Not implemented")}serialize(){throw new Error("Not implemented")}getAccounts(){throw new Error("Not implemented")}addAccount(){throw new Error("Not implemented")}exportAccount(e){throw new Error("Not implemented")}getWallet(e){throw new Error("Not implemented")}},E=class{};0&&(module.exports={StorageAbstract,Vault,WalletManager});
//# sourceMappingURL=index.js.map
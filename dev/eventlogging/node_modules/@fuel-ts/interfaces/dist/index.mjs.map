{"version":3,"sources":["../src/index.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable max-classes-per-file */\n// #region typedoc:Bech32-HRP\nexport type Bech32Address = `fuel${string}`;\n// #endregion\nexport type B256Address = string;\n\nexport abstract class AbstractScriptRequest<T> {\n  abstract bytes: Uint8Array;\n  abstract encodeScriptData: (data: T) => Uint8Array;\n}\n\n// #region typedoc:AbstractAddress\nexport abstract class AbstractAddress {\n  abstract toJSON(): string;\n  abstract toString(): string;\n  abstract toAddress(): Bech32Address;\n  abstract toB256(): B256Address;\n  abstract toHexString(): string;\n  abstract toBytes(): Uint8Array;\n  abstract equals(other: AbstractAddress): boolean;\n}\n// #endregion\n\nexport abstract class AbstractAccount {\n  abstract address: AbstractAddress;\n  abstract provider: unknown;\n  abstract getResourcesToSpend(quantities: any[], options?: any): any;\n  abstract sendTransaction(transactionRequest: any): any;\n  abstract simulateTransaction(transactionRequest: any): any;\n}\n\nexport abstract class AbstractProgram {\n  abstract account: AbstractAccount | null;\n  abstract interface: {\n    encodeFunctionData: (func: any, args: any[], offset: number, isMainArgs?: boolean) => any;\n    decodeFunctionResult: (func: any, result: Uint8Array | string) => any;\n    updateExternalLoggedTypes: (id: string, loggedTypes: any[]) => any;\n    loggedTypes: any;\n  };\n\n  abstract provider: {\n    sendTransaction(transactionRequest: any): any;\n  } | null;\n}\n\nexport abstract class AbstractContract extends AbstractProgram {\n  abstract id: AbstractAddress;\n}\n\nexport abstract class AbstractScript extends AbstractProgram {\n  abstract bytes: Uint8Array;\n}\n\nexport type AddressLike = AbstractAddress | AbstractAccount;\n\nexport type ContractIdLike = AbstractAddress | AbstractContract;\n\nexport abstract class AbstractPredicate {\n  abstract bytes: Uint8Array;\n  abstract address: AbstractAddress;\n  abstract predicateData: Uint8Array;\n\n  abstract types?: ReadonlyArray<any>;\n}\n"],"mappings":"AAOO,IAAeA,EAAf,KAAwC,CAG/C,EAGsBC,EAAf,KAA+B,CAQtC,EAGsBC,EAAf,KAA+B,CAMtC,EAEsBC,EAAf,KAA+B,CAYtC,EAEsBC,EAAf,cAAwCD,CAAgB,CAE/D,EAEsBE,EAAf,cAAsCF,CAAgB,CAE7D,EAMsBG,EAAf,KAAiC,CAMxC","names":["AbstractScriptRequest","AbstractAddress","AbstractAccount","AbstractProgram","AbstractContract","AbstractScript","AbstractPredicate"]}
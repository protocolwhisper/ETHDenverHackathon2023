import{sha256 as a}from"@ethersproject/sha2";import{ZeroBytes32 as o}from"@fuel-ts/constants";import{bufferFromString as f}from"@fuel-ts/keystore";import{bn as i}from"@fuel-ts/math";import{transactionRequestify as y,TransactionType as h}from"@fuel-ts/providers";import{OutputType as s,InputType as u,TransactionCoder as d}from"@fuel-ts/transactions";import p from"lodash.clonedeep";function w(r){return a(f(r,"utf-8"))}function g(r){let e=y(r).toTransaction();return e.type===h.Script&&(e.receiptsRoot=o),e.inputs=e.inputs.map(n=>{let t=p(n);switch(t.type){case u.Coin:return t;case u.Contract:return t.utxoID={transactionId:o,outputIndex:0},t.balanceRoot=o,t.stateRoot=o,t;default:return t}}),e.outputs=e.outputs.map(n=>{let t=p(n);switch(t.type){case s.Contract:return t.balanceRoot=o,t.stateRoot=o,t;case s.Change:return t.amount=i(0),t;case s.Variable:return t.to=o,t.amount=i(0),t.assetId=o,t;default:return t}}),e.witnessesCount=0,e.witnesses=[],a(new d().encode(e))}function k(r){return a(r)}export{k as hash,w as hashMessage,g as hashTransaction};
//# sourceMappingURL=index.mjs.map
import * as _fuel_ts_providers from '@fuel-ts/providers';
import { Provider, TransactionRequestLike, TransactionResponse, CallResult } from '@fuel-ts/providers';
import { BytesLike } from '@ethersproject/bytes';
import { InputValue, JsonAbiFragmentType, Interface, JsonAbi } from '@fuel-ts/abi-coder';
import { Account } from '@fuel-ts/wallet';

declare class Predicate<ARGS extends InputValue[]> extends Account {
    bytes: Uint8Array;
    types?: ReadonlyArray<JsonAbiFragmentType>;
    predicateData: Uint8Array;
    interface?: Interface;
    constructor(bytes: BytesLike, types?: JsonAbi, provider?: string | Provider);
    populateTransactionPredicateData(transactionRequestLike: TransactionRequestLike): _fuel_ts_providers.TransactionRequest;
    sendTransaction(transactionRequestLike: TransactionRequestLike): Promise<TransactionResponse>;
    simulateTransaction(transactionRequestLike: TransactionRequestLike): Promise<CallResult>;
    setData<T extends ARGS>(...args: T): this;
}

export { Predicate };

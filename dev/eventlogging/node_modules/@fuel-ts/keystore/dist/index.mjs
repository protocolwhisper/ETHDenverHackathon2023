var h=(r=>typeof require!="undefined"?require:typeof Proxy!="undefined"?new Proxy(r,{get:(t,e)=>(typeof require!="undefined"?require:t)[e]}):r)(function(r){if(typeof require!="undefined")return require.apply(this,arguments);throw new Error('Dynamic require of "'+r+'" is not supported')});import{arrayify as K}from"@ethersproject/bytes";import{pbkdf2 as C}from"@ethersproject/pbkdf2";var T,v="Node";typeof globalThis<"u"&&globalThis.crypto&&(T=globalThis.crypto,v="Web");if(!T&&typeof h=="function")try{T=h("crypto"),v="Node"}catch(r){console.error("keystore expects a standard Web browser or Node environment.",r)}var n=T,f=v;function s(r,t="base64"){return f==="Node"?Buffer.from(r,t):t==="utf-8"?new TextEncoder().encode(r):new Uint8Array(atob(r).split("").map(e=>e.charCodeAt(0)))}function i(r,t="base64"){return f==="Node"?Buffer.from(r).toString(t):btoa(String.fromCharCode.apply(null,new Uint8Array(r)))}function m(r,t){let e=s(String(r).normalize("NFKC"),"utf-8"),o=C(e,t,1e5,32,"sha256");return K(o)}var u=r=>f==="Node"?n.randomBytes(r):n.getRandomValues(new Uint8Array(r));var x="aes-256-ctr";async function B(r,t){let e=u(16),o=u(32),p=m(r,o),y=Uint8Array.from(Buffer.from(JSON.stringify(t),"utf-8")),a=n.createCipheriv(x,p,e),c=a.update(y);return c=Buffer.concat([c,a.final()]),{data:i(c),iv:i(e),salt:i(o)}}async function w(r,t){let e=s(t.iv),o=s(t.salt),p=m(r,o),y=s(t.data),a=n.createDecipheriv(x,p,e),c=a.update(y),g=Buffer.concat([c,a.final()]),b=Buffer.from(g).toString("utf-8");try{return JSON.parse(b)}catch{throw new Error("Invalid credentials")}}var N="AES-CTR";async function S(r,t){let e=u(16),o=u(32),p=m(r,o),y=JSON.stringify(t),a=s(y,"utf-8"),c={name:N,counter:e,length:64},g=await n.subtle.importKey("raw",p,c,!1,["encrypt"]),b=await n.subtle.encrypt(c,g,a);return{data:i(b),iv:i(e),salt:i(o)}}async function A(r,t){let e=s(t.iv),o=s(t.salt),p=m(r,o),y=s(t.data),a={name:N,counter:e,length:64},c=await n.subtle.importKey("raw",p,a,!1,["decrypt"]),g=await n.subtle.decrypt(a,c,y),b=new TextDecoder().decode(g);try{return JSON.parse(b)}catch{throw new Error("Invalid credentials")}}async function Q(r,t){return f==="Node"?B(r,t):S(r,t)}async function X(r,t){return f==="Node"?w(r,t):A(r,t)}export{s as bufferFromString,X as decrypt,Q as encrypt,m as keyFromPassword,u as randomBytes,i as stringFromBuffer};
//# sourceMappingURL=index.mjs.map